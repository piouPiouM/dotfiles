" .vimrc
" Author: Mehdi Kabab <http://pioupioum.fr>
" Source: http://github.com/piouPiouM/dotfiles/
" 
" 1. Preamble
" 2. Basic configuration
" 3. UI options
" 4. Text formatting

" Section: Preamble {{{1
" -----------------

let g:ppm_vim_path = escape(fnamemodify(resolve(expand("<sfile>:p" . "vim")), ":h"), ' ')

" Source core functions.
exe 'source ' . g:ppm_vim_path . '/config/ppm.vim'

filetype off
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required! 
Bundle 'gmarik/vundle'

" My bundles {{{2

Bundle 'AfterColors.vim'
Bundle 'Gundo'
Bundle 'L9'
Bundle 'ctrlp.vim'
Bundle 'EasyMotion'
Bundle 'Gist.vim'
Bundle 'matchit.zip'
Bundle 'The-NERD-Commenter'
Bundle 'phpcomplete.vim'
Bundle 'repeat.vim'
Bundle 'surround.vim'
Bundle 'Syntastic'
Bundle 'Tagbar'
Bundle 'unimpaired.vim'
Bundle 'YankRing.vim'
Bundle 'hexHighlight.vim'
Bundle 'vim-signature'
Bundle 'tracwiki'
Bundle 'Shougo/neocomplcache'
Bundle 'Shougo/neosnippet'
Bundle 'Lokaltog/vim-powerline'
Bundle 'kchmck/vim-coffee-script.git'
Bundle 'tpope/vim-haml'
Bundle 'roman/golden-ratio'
Bundle 'mileszs/ack.vim'
Bundle 'Townk/vim-autoclose'
Bundle 'godlygeek/tabular'
Bundle 'honza/snipmate-snippets'
Bundle 'ap/vim-css-color'
Bundle 'mattn/zencoding-vim'
Bundle 'terryma/vim-multiple-cursors'

" }}}2
" Colorscheme bundles {{{2

Bundle 'altercation/vim-colors-solarized'
Bundle 'chriskempson/vim-tomorrow-theme'

" }}}2
" }}}1
" Section: Basic configuration {{{1
" ----------------------------

set nocompatible          " Vim motherfucker!
filetype plugin indent on " Load plugin and indent settings for the detected filetype.
syntax on                 " Turn on syntax highlighting.
set hidden                " Don't require saving before editing another file.

scriptencoding utf-8
set encoding=utf-8
set fileencoding=utf-8

set showmatch  " Show matching brackets/parenthesis
set autoread   " Set to auto read when a file is changed from the outside
set modelines=0
set history=300
set lazyredraw " Do not redraw while running macros (much faster).
set nofsync    " Let the OS decide when it's appropriate to flush the cache, rather than vim (much faster).
if !has("gui_running")
  set t_Co=256
  set mouse=a    " Enable mouse support.
  set ttyfast    " Speed up rendering in modern shells.
endif

if has('balloon_eval') && has('unix')
  set ballooneval
endif

" Undo {{{2

set nobackup
set nowritebackup
set noswapfile
if has('persistent_undo')
  set undofile
  set undodir=~/.vim/tmp
endif

" }}}2
" Search {{{2

set ignorecase " Ignore case when searching
set smartcase  " except if it's an uppercase search
set hlsearch   " Highlight search things
set incsearch  " Make search act like search in modern browsers
set magic      " Set magic on, for regular expressions
set gdefault   " Apply global substitutions

" }}}2
" }}}1
" Section: UI options {{{1
" -------------------

set display=lastline
set splitbelow splitright  " Split window at right bottom.
set relativenumber         " Always show line numbers, with relative position.
set background=dark        " I like black color schemes.
set cursorline             " Highlight current line.
set scrolloff=3            " Provide some context when editing.
set guifont=Menlo-RegularForPowerline:h11 " Use the Powerline specific font
color Tomorrow-Night

if has('cmdline_info')
  set ruler                                          " Show the ruler.
  set rulerformat=%30(%=\:b%n%y%m%r%w\ %l,%c%V\ %P%) " A ruler on steroids.
  set showcmd                                        " Show partial commands in status line and
                                                     " selected characters/lines in visual mode.
endif

set list                       " Show invisible characters.
set backspace=indent,eol,start " Backspace through everything in insert mode.
set listchars=tab:▸\ ,eol:¬,extends:❯,precedes:❮,nbsp:․
set showbreak=↪

" Folding rules {{{2

set foldenable        " Enable folding.
set foldmethod=marker " Detect triple-{ style fold marker.

" }}}2
" Command line stuff {{{2

set wildmenu              " Show menu with possible tab completions.
set wildmode=list:longest " Bash tab style.

" Ignore these filenames during enhanced command line completion:
set wildignore+=*.aux,*.out,*.toc                " LaTeX intermediate files
set wildignore+=*.jpe?g,*.png,*.bmp,*.gif        " Binary images
set wildignore+=*.luac                           " Lua byte code
set wildignore+=*.o,*.obj,*.exe,*.dll,*.manifest " compiled object files
set wildignore+=*.pyc                            " Python byte code
set wildignore+=*.spl                            " compiled spelling word lists
set wildignore+=*.sw?                            " Vim swap files
set wildignore+=*.sassc,*.scssc,.sass-cache      " Sass cache files
set wildignore+=.svn,.git,.gitkeep               " SCM stuff
set wildignore+=.DS_Store                        " OSX bullshit
set wildignore+=tags                             " ctags stuff
set tags=./tags;/

" }}}2
" Statusline {{{2

set laststatus=2                             " Always show status line.
set showmode                                 " Display the current mode
set statusline=%-3.3n\                       " buffer number
set statusline+=%f                           " Path.
set statusline+=%m                           " Modified flag.
set statusline+=%r                           " Readonly flag.
set statusline+=%w                           " Preview window flag.
set statusline+=\                            " Space.
set statusline+=%#warningmsg#                " Highlight the following as a warning.
set statusline+=%{SyntasticStatuslineFlag()} " Syntastic errors.
set statusline+=%*                           " Reset highlighting.
set statusline+=%=                           " Right align.

" File format, encoding and type.  Ex: "(unix/utf-8/python)"
set statusline+=(
set statusline+=%{&ff}                        " Format (unix/DOS).
set statusline+=/
set statusline+=%{strlen(&fenc)?&fenc:&enc}   " Encoding (utf-8).
set statusline+=/
set statusline+=%{&ft}                        " Type (python).
set statusline+=)

" Line and column position and counts.
set statusline+=\ (line\ %l\/%L\/%P,\ col\ %03c)

" }}}2
" }}}1
" Section: Text formatting {{{1
" ------------------------

set tabstop=2        " A tab is 2 spaces.
set shiftwidth=2     " Number of spaces to use for autoindenting.
set softtabstop=2    " When hitting <BS>, pretend like a tab is removed, even if spaces.
set expandtab        " Expand tabs by default.
set autoindent       " Always set autoindenting on.
set copyindent       " Copy the previous indentation on autoindenting.
set wrap             " Wrap lines.
set formatoptions+=1 " When wrapping paragraphs, don't end lines with 1-letter words.
set infercase        " Ignore case on insert completion.
set textwidth=120
if executable('par')
  set formatprg=par\ -w120re
endif

" }}}1

call ppm#source('config/plugins.vim')
call ppm#source('config/mappings.vim')
call ppm#source('config/commands.vim')
call ppm#source('config/autocommands.vim')
call ppm#source('config/filetypes.vim')

if filereadable(expand("~/.local.vimrc"))
  source ~/.local.vimrc
endif

