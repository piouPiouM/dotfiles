set nocompatible
let mapleader = ","

" activate Pathogen
filetype off
silent! call pathogen#runtime_append_all_bundles()
silent! call pathogen#helptags()

" load ftplugins and indent files
filetype plugin indent on

" turn on syntax highlighting
syntax on

scriptencoding utf-8
set encoding=utf-8
set fileencoding=utf-8
set modelines=0
set ttyfast

" store lots of :cmdline history
set history=300

" Set to auto read when a file is changed from the outside
set autoread

" show matching brackets/parenthesis
set showmatch

" Whitespace stuff

set wrap
set textwidth=120
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set autoindent

" UI stuff

set showmode    " display the current mode
set number

set background=dark
silent! set transparency=8
color twilight_pioupioum
set cursorline      " highlight current line
" hi cursorline guibg=#333333   " highlight bg color of current line
" hi cursorcolumn guibg=#333333 " highlight cursor

if has('cmdline_info')
  set ruler " show the ruler
  set rulerformat=%30(%=\:b%n%y%m%r%w\ %l,%c%V\ %P%) " a ruler on steroids
  set showcmd " show partial commands in status line and
              " selected characters/lines in visual mode
endif

set list
set listchars=tab:▸\ ,eol:¬,extends:❯,precedes:❮
set showbreak=↪

set wildmenu
set wildmode=list:longest
set visualbell


"Directories for swp files

set backupdir=~/.vim/backup
set directory=~/.vim/backup

" Search

set ignorecase " Ignore case when searching
set smartcase  " except if it's an uppercase search
set hlsearch   " Highlight search things
set incsearch  " Make search act like search in modern browsers
set magic      " Set magic on, for regular expressions
set gdefault   " Apply global substitutions
" Clear out search
nnoremap <leader><space> :noh<cr>


" statusline setup
set statusline=%f    " Path.
set statusline+=%m   " Modified flag.
set statusline+=%r   " Readonly flag.
set statusline+=%w   " Preview window flag.

set statusline+=\    " Space.

"set statusline+=%#redbar#                    " Highlight the following as a warning.
"set statusline+=%{SyntasticStatuslineFlag()} " Syntastic errors.
"set statusline+=%*                           " Reset highlighting.

set statusline+=%=   " Right align.

" File format, encoding and type.  Ex: "(unix/utf-8/python)"
set statusline+=(
set statusline+=%{&ff}                        " Format (unix/DOS).
set statusline+=/
set statusline+=%{strlen(&fenc)?&fenc:&enc}   " Encoding (utf-8).
set statusline+=/
set statusline+=%{&ft}                        " Type (python).
set statusline+=)

" Line and column position and counts.
set statusline+=\ (line\ %l\/%L,\ col\ %03c)
set laststatus=2 " always show status line

" Source the vimrc file after saving it
" http://vimcasts.org/e/24
if has("autocmd")
  autocmd! bufwritepost .vimrc source $MYVIMRC
  if has("gui_running")
    autocmd! bufwritepost .vimrc source $MYGVIMRC
  endif
endif

" Show syntax highlighting groups for word under cursor
" http://vimcasts.org/e/25
nmap <C-S-P> :call <SID>SynStack()<CR>
function! <SID>SynStack()
  if !exists("*synstack")
    return
  endif
  echo map(synstack(line('.'), col('.')), 'synIDattr(v:val, "name")')
endfunc

" Bubbling text in TextMate style.
" http://vimcasts.org/e/26
" Requirements: unimpaired plugin.
" Bubble single lines
nmap <C-Up> [e
nmap <C-Down> ]e
" Bubble multiple lines
vmap <C-Up> [egv
vmap <C-Down> ]egv

"
" Mapping
"

" Reselect text that just past
nmap gV `[v`]

" Open new vertical split window and switch over it
nnoremap <leader>w <C-w>v<C-w>l

" Write a file with prevledges from an unprivledged session.
cmap w!! %!sudo tee > /dev/null %

" Toggle NERDTree
noremap <silent> <F2> :NERDTreeToggle<CR>
inoremap <silent> <F2> <ESC>:NERDTreeToggle<CR>

" Show yank history
nnoremap <silent> <F3> :YRShow<cr>
inoremap <silent> <F3> <ESC>:YRShow<cr>

nnoremap <leader>a :Ack

" Gundo plugin
nnoremap <F5> :GundoToggle<CR>
let g:gundo_preview_height = 40
let g:gundo_right = 1

