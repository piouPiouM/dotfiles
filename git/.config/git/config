# vim: ft=gitconfig
[user]
  name = Mehdi Kabab
[color]
  ui = auto
[core]
	excludesfile = ~/.config/git/ignore
  editor = nvim
  ignoreCase = false
  whitespace = -trailing-space

  # Make `git rebase` safer on macOS
  # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
  trustctime = false

  # Prevent showing files whose names contain non-ASCII symbols as unversioned.
  # http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
  precomposeunicode = false

  ; pager = delta --highlight-removed --theme='Nord' --minus-color="#3f0001" --minus-emph-color="#901011" --plus-color="#0c2c10" --plus-emph-color="#006000"

[alias]
  ci = commit
  st = status
  s = status -s

  last = rev-parse --short HEAD
  sha = rev-parse HEAD
  origin = config --get remote.origin.url
  current = rev-parse --abbrev-ref HEAD

  oneline = log --pretty=oneline --abbrev-commit --graph --decorate
  lg = log --graph --pretty=tformat:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%an %ar)%Creset'
  lc = !git lg @{u}..
  l = !git oneline -n 20

  recent = !git for-each-ref --sort=-committerdate --format='%(refname:short)' refs/heads/ | head -n 20

  fa = !FILES=`git status -s | awk '{ print $2 }' | fzf -x -m` && git add --all ${FILES}
  fs = !HASH=`git log --pretty=oneline | head -n 100 | fzf` && git show `echo ${HASH} | awk '{ print $1 }'`
  fl = !HASH=`git log --pretty=oneline | head -n 100 | fzf` && echo ${HASH} | awk '{ print $1 }' | xargs echo -n | pbcopy

  amend = commit --amend
  oops = commit --amend --no-edit
  who = shortlog -sne

  changes = diff --name-status
  dic = diff --cached
  diffstat = diff --stat

  # Show the diff between the latest commit and the current state
  d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

  # `git di $number` shows the diff between the state `$number` revisions ago and the current state
  di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"

  # Pull in remote changes for the current repository and all its submodules
  p = !"git pull; git submodule foreach git pull origin master"

  # Clone a repository including all submodules
  c = clone --recursive

  # Commit all changes
  ca = !git add -A && git commit -av

  svnpull = svn rebase
  svnpush = svn dcommit
  addm = !git-ls-files -m -z | xargs -0 git-add && git status
  addu = !git-ls-files -o --exclude-standard -z | xargs -0 git-add && git status
  rmm = !git ls-files -d -z | xargs -0 git-rm && git status
  mate = !git-ls-files -m -z | xargs -0 mate
  mateall = !git-ls-files -m -o --exclude-standard -z | xargs -0 mate
  undo = git reset --soft HEAD^

[apply]
  # Detect whitespace errors when applying a patch
  whitespace = fix

[credential]
  helper = osxkeychain
[rerere]
  enabled = true
  autoupdate = true
[status]
  submoduleSummary = true
  showUntrackedFiles = all
[diff]
  submodule = log
  wordRegex = .
  mnemonicPrefix = true
[merge]
  conflictStyle = diff3
[mergetool]
  keepBackup = false
  keepTemporaries = false
  writeToTemp = true
  prompt = false
[fetch]
  recurseSubmodules = on-demand
[push]
  default = current
[grep]
  extendedRegexp = true
[log]
  abbrevCommit = true
  follow = true
[tag]
  # Sort tags as version numbers whenever applicable, so 1.10.2 is AFTER 1.2.0.
  sort = version:refname
[versionsort]
  prereleaseSuffix = -pre
  prereleaseSuffix = .pre
  prereleaseSuffix = -beta
  prereleaseSuffix = .beta
  prereleaseSuffix = -rc
  prereleaseSuffix = .rc
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
[include]
  path = ~/.local/share/git/config

[url "git@github.com:"]
	insteadOf = git://github.com/
