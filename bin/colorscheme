#!/usr/bin/env zsh
# @name colorscheme
# @description Apply the colorscheme corresponding to the given mode to my tools.
# @arg $1 string One of available modes.

typeset -Ar _mode_map=(
  "dark" "catppuccin-mocha"
  "light" "catppuccin-latte"
  "soft-dark" "rose-pine"
  "soft-light" "rose-pine-dawn"
)

usage() {
  builtin emulate -L zsh

  echo "Usage: colorscheme " "$(IFS='|'; echo "${(k)_mode_map}")"
}

success() {
  builtin emulate -L zsh

  echo "âœ“ Theme applied for ${1}"
}

main() {
  builtin emulate -L zsh

  local -r _mode="$1"

  if [[ -z $_mode_map[$_mode] ]]; then
    echo -e "Unknown mode given.\n\n$(usage)" >&2
    return 1
  fi

  local -r _theme="${_mode_map[$_mode]}"

  export PPM_THEME=$_theme

  # Use `>|` to bypass noclobber option
  echo "${_mode}" >| "${HOME}/.theme" 
  autoload -Uz theme_kitty && theme_kitty $_theme && success "Kitty"
  autoload -Uz theme_bat && theme_bat $_theme && success "Bat"
  autoload -Uz theme_btop && theme_btop $_theme && success "btop"
  autoload -Uz theme_fzf && theme_fzf $_theme && success "fzf"
  autoload -Uz theme_lazygit && theme_lazygit $_theme && success "Lazygit"

  # zimfw command is not available because it's a function loaded by `$ZIM_HOME/init.zsh`.
  [ -f "${ZIM_HOME}"/zimfw.zsh ] && source "${ZIM_HOME}"/zimfw.zsh compile -q
}

main "$@"